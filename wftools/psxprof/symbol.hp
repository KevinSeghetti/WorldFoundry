//==============================================================================
// symbol.hp:
// Copyright (c) 1998-1999, World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org
//==============================================================================
#ifndef SYMBOL_HP
#define SYMBOL_HP

typedef unsigned long uint32;

class Symbol
{
public:
	Symbol( const string& fn, unsigned long add )
	{
		_Function = fn;
		_Address = add;
		_Frequency = 0;
	}

	Symbol()	{}
	~Symbol()	{}

	bool operator==( const Symbol& sym )	{ return sym._Function == _Function; }
	const string& Function() const	   		{ return _Function; }
	uint32 Address() const					{ return _Address; }

	unsigned long _Frequency;
	int _size;

protected:
	string _Function;
	uint32 _Address;
};

#endif	// SYMBOL_HP
