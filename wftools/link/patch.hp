//==============================================================================
// patch.hp:
// Copyright (c) 1998-1999, World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org
//==============================================================================
#ifndef PATCH_HP
#define PATCH_HP

#include "section.hp"
#include <stl.h>
class ObjectFile;

class Patch
{
public:
	Patch( int offset, char* data, char type, char*, ObjectFile* of, int section );
	virtual ~Patch();
	Patch();		// for STL

	bool operator==( const Patch& patch ) const;

	void apply();

	bool evaluate( unsigned long pc, unsigned long* & addr, unsigned long& data );
	int section() const;

	//const char* print() const;			// change to ostream
	//char _print[ 256 ];

protected:
	unsigned long evaluate();
	//const char* _szPrintable;
	int _section;
	int _offset;
	char* _data;
	int _type;
	char* _sectionData;
	unsigned long _pc;
	vector<Section> * _sections;
//	vector< int, allocator > _sections;
	ObjectFile* _of;
};

#endif	/* PATCH_HP */
