//==============================================================================
// ailexer.hp: Copyright (c) 1996-1999, World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org
//==============================================================================

#ifndef AILEXER_HP
#define AILEXER_HP

#include <vector>

#include "fileline.hp"
#ifndef _WIN32
#include "FlexLexer.h"
#else
#include "flexle~1.h"
#endif

class aiFlexLexer : public yyFlexLexer
{
public:
	aiFlexLexer( std::istream* arg_yyin = 0, std::ostream* arg_yyout = 0 );
	virtual ~aiFlexLexer()		{}

	void push_include( const char* szIncludeFile );
	void push_system_include( const char* szIncludeFile );
	bool pop_include();

	void nextLine()		       	{ ++include()->nLine; }
	int line()		       	{ return include()->nLine; }
	const char* filename();

//	const char* currentLine() const;
	const char* currentLine();
	const char* currentLine( const char* );

	std::vector< FileLineInfo > _fileLineInfo;
protected:
	FileLineInfo* include();
//	const FileLineInfo* include() const;
};

#endif 	// AILEXER_HP

