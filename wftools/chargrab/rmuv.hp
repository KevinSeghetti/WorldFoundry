//==============================================================================
// rmuv.hp: Copyright (c) 1996-1999, World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org
//==============================================================================

#ifndef RMUV_HP
#define RMUV_HP

#include "global.hp"
#include "types.h"

#if defined( __WIN__ )
#	pragma pack(push,1)
#define GNUALIGN(alignment)
#elif defined(__LINUX__)
#define GNUALIGN(alignment) __attribute__ ((aligned(alignment)))
#elif defined(__PSX__)
#error !!
#else
#error target not defined
#endif

typedef struct
{
	enum { TEXTURE_NAME_LENGTH = 32 };
	char szTextureName[ TEXTURE_NAME_LENGTH+1 ];
	char nFrame;
	int16 u, v;
	int16 w, h;
	int16 palx, paly;
//	struct
//	{
		unsigned short _ : 10;
		unsigned short bTranslucent : 1;
		unsigned short bitdepth : 5;
//	};
} GNUALIGN(1) _RMUV;
#if defined(__WIN__)
#pragma pack( pop )
#endif


class RMUV
{
public:
	RMUV( void* );
	~RMUV();

	int NumEntries() const		{ return _nEntries; }
	_RMUV* GetRMUV( const char* szFilename, int idxMaterial = 0 ) const;

protected:
	_RMUV* _tblRMUV;
	int _nEntries;
};

ostream& operator << ( ostream& s, const _RMUV rmuv );

#endif	// RMUV_HP
