//=============================================================================
// id.hp
// Copyright 1997,99 World Foundry Group. 
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

// ===========================================================================
// History:
// ?? ??? ??	WBNIV	Created
//============================================================================

#ifndef IFFWRITE_ID_HP
#define IFFWRITE_ID_HP

// The compiler (gcc 2.95.x) complains about this: #pragma once

#include <pigsys/assert.hp>
#include <string>
#include <cstring>
#include <iostream>
#if defined(__WIN__)
#include <ostream>
#endif

class _IffWriter;

class ID
{
public:
	ID()
	{
	}
	explicit ID( const char* szId )
	{
		assert( strlen( szId ) <= 4 );
		_id = *((unsigned long*)szId);
	}
	explicit ID( unsigned long id )
	{
		_id = (unsigned char)( id>>24 ) | (unsigned char)( id>>16 )<<8 | (unsigned char)( id>>8 )<<16 | (unsigned char)( id&0xFF )<<24;
	}

	operator bool() const	{ return bool( _id ); }
	unsigned long operator()() const
	{
		return _id;
	}
	bool operator==( const ID& _otherId ) const
	{
		return _id == _otherId._id;
	}

	friend std::ostream& operator<< ( std::ostream& os, const ID& id )
	{
		id._print( os );
		return os;
	}
	void _print( std::ostream& os ) const
	{
		char ch;

		os << '\'';
		if ( (ch = char( _id&0xFF )) ) os << ch;
		if ( (ch = char( _id>>8   )) ) os << ch;
		if ( (ch = char( _id>>16  )) ) os << ch;
		if ( (ch = char( _id>>24  )) ) os << ch;
		os << '\'';
	}
	const char* name() const
	{
		static char szID[ 5 ];
		strncpy( szID, (char*)&_id, 4 );
		szID[ 4 ] = '\0';
		return szID;
	}

	static const ID nil;

	friend _IffWriter& operator << ( _IffWriter& _iff, const ID& id );

protected:
//#pragma pack( 1 )
	unsigned long _id;
//	char _eos;
//#pragma pack()
};

static const ID nil = ID( 0UL );

#endif	// IFFWRITE_ID_HP
