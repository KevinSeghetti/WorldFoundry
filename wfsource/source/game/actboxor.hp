//=============================================================================
// ActBoxOR.hp: Activation Box Object Reference
// Copyright ( c ) 1996,1997,1999,2000,2002,2003 World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

// ===========================================================================
//
//	Abstract: ActBoxOR Header file
//	History:
//
//	Class Hierarchy:
//			none
//
//	Dependancies:
//
//	Restrictions:
//
//	Example:
//
//============================================================================

#ifndef _ActBoxOR_HP
#define _ActBoxOR_HP

//============================================================================

#include "level.hp"
#include <oas/levelcon.h>
#include <physics/activate.hp>
#include "actor.hp"

//============================================================================

struct _ActBoxOR;

//============================================================================

class ActBoxOR : public Actor
{
public:
	ActBoxOR(const SObjectStartupData* startupData);
	virtual ~ActBoxOR() { }

	virtual EActorKind kind() const;

	virtual void update();

private:
	INLINE const _ActBoxOR* getOad() const			{ return (const _ActBoxOR*)_oadData; }

   inline const _Activation* GetActivateBlockPtr() const;
   Activation activation;
};

//============================================================================

Actor* OadActBoxOR(const SObjectStartupData* startupData);

//============================================================================
#endif // !_ActBoxOR_HP
//============================================================================

