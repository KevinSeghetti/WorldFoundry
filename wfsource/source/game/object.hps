#*============================================================================
#* object.hps: used to create header files for game objects
#*============================================================================
//============================================================================
// @+objectname@+.hp:
// Copyright ( c ) 1997,99 World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

//===========================================================================
//
//	Abstract: @+objectname Header file
//	History:
//			Created	from object.hps using prep
//
//	Class Hierarchy:
//			none
//
//	Dependancies:
//
//	Restrictions:
//
//	Example:
//
//============================================================================

##ifndef _@+objectname@+_HP
##define _@+objectname@+_HP

//============================================================================

##include "global.hp"
##include "level.hp"
struct _@+objectname@+;

//============================================================================

class @+objectname@+ : public Actor
{
public:
	@+objectname@+( const SObjectStartupData* startupData );
	virtual ~@+objectname@+();
	virtual EActorKind kind() const;

	virtual void update(Level* level);

protected:

private:
	INLINE const _@+objectname@+* getOad() const;
};

//============================================================================

Actor* Oad@+objectname@+( const SObjectStartupData* startupData );

//============================================================================
##if		USE_INLINE_DEFS || defined(_@+objectname@+_CC)
##include "@+objectname@+.hpi"	// include all inline definitions as appropriate
##endif
//============================================================================
##endif // !_@+objectname@+_HP
//============================================================================
