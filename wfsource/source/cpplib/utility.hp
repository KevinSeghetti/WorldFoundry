#ifndef _MAX
 #define _MAX	_cpp_max
 #define _MIN	_cpp_min
#endif

//============================================================================
// stuff pigs forgot, if I can ever build PIGS, I will move these (KTS)

inline int
random( int nRange )
{
	return rand() % nRange;
}
                
//==============================================================================
                
#pragma message ("KTS " __FILE__ ": finish making this work on gnu")
#if 0
template<class fuck> inline
	const fuck& test(const fuck& _X, const fuck& _Y)
	{
		return _X;
	}

template<class _Ty> inline
	const _Ty& _cpp_max(const _Ty& _X, const _Ty& _Y)
	{return (_X < _Y ? _Y : _X); }
		// TEMPLATE FUNCTION max WITH PRED
template<class _Ty, class _Pr> inline
	const _Ty& _cpp_max(const _Ty& _X, const _Ty& _Y, _Pr _P)
	{return (_P(_X, _Y) ? _Y : _X); }
		// TEMPLATE FUNCTION min
template<class _Ty> inline
	const _Ty& _cpp_min(const _Ty& _X, const _Ty& _Y)
	{return (_Y < _X ? _Y : _X); }
		// TEMPLATE FUNCTION min WITH PRED
template<class _Ty, class _Pr> inline
	const _Ty& _cpp_min(const _Ty& _X, const _Ty& _Y, _Pr _P)
	{return (_P(_Y, _X) ? _Y : _X); }
		// TEMPLATE FUNCTION mismatch


// TEMPLATE FUNCTION swap
template<class _Ty> inline
	void swap(_Ty& _X, _Ty& _Y)
	{_Ty _Tmp = _X;
	_X = _Y, _Y = _Tmp; }



#endif
