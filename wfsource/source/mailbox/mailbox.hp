// ===========================================================================
// mailbox.hp: mailboxes definitions
// Copyright ( c ) 1996,1997,1999,2000,2002 World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

//===========================================================================
// Description: mailbox definitions
// Original Author: Kevin Seghetti
//============================================================================

#ifndef _MAILBOX_HP
#define _MAILBOX_HP

//==============================================================================

#include <math/scalar.hp>
#include <cpplib/array.hp>
                                                                            
//============================================================================
// These are hardcode values because they can't change--there are external
// data files ( the levels and objects ) which use these numbers explicitly
// They could change if the Mailbox value were a drop-down list which could
// be automatically generated by this enumeration

// global mailboxes are the same to all objects, local are unique to each object
// user mailboxes have no side effects, they are just storage
// system mailboxes have side effects, writting to them causes something
// to change in the engine (think of the engine as a coprocessor to the script,
// and the system mailboxes as registers)

//==============================================================================

enum EMailBoxes
{
#define Comment(val)
#define MAILBOXENTRY(name,value)  EMAILBOX_##name =  value,
#include "mailbox.inc"
#undef MAILBOXENTRY
};

//==============================================================================

class Mailboxes
{
public:
   virtual ~Mailboxes();
   virtual Scalar ReadMailbox(long mailbox) const = 0;
   virtual void WriteMailbox(long mailbox, Scalar value) = 0;
#if SW_DBSTREAM
	friend std::ostream& operator <<( std::ostream& s, const Mailboxes& mailboxes );
#endif
protected:
#if SW_DBSTREAM
   virtual void _Print(std::ostream& s) const;
#endif
private:
};

//==============================================================================

class MailboxesWithStorage : public Mailboxes
{
public:
   MailboxesWithStorage(long mailboxBase, long numberOfLocalMailboxes, Mailboxes* parent);
   ~MailboxesWithStorage();
   virtual Scalar ReadMailbox(long mailbox) const;
   virtual void WriteMailbox(long mailbox, Scalar value);
protected:
#if SW_DBSTREAM
    virtual void _Print(std::ostream& s) const;
#endif
private:
   long _mailboxBase;
   Array<Scalar>  _localMailboxes;
   Mailboxes* _parent;
};

//==============================================================================

class MailboxesManager
{
public:
    virtual ~MailboxesManager();
    virtual Mailboxes& LookupMailboxes(int objectIndex)=0;
};


//==============================================================================

// simple case where objectIndex is ignored

class SingleMailboxesManager : public MailboxesManager
{
public:
    SingleMailboxesManager(Mailboxes& mailboxes);
    ~SingleMailboxesManager();
    Mailboxes& LookupMailboxes(int objectIndex);
private:
    Mailboxes& _mailboxes;
};

//============================================================================
#endif
//============================================================================
