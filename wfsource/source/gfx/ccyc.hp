//==============================================================================
// ccyc.hp:
// Copyright 1997,99 World Foundry Group.  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

//==============================================================================
//=============================================================================

#ifndef CCYC_HP
#define CCYC_HP

//=============================================================================

#include <pigsys/pigsys.hp>
#include <math/scalar.hp>
//class ostream;

typedef struct
{
	int16 start;
	int16 end;
	Scalar speed;
} _CCYC;

#if DO_IOSTREAMS
std::ostream& operator << ( std::ostream& s, _CCYC ccyc );
#endif

//=============================================================================

class CCYC
{
public:
	CCYC();
	CCYC( void* data, int xOffset, int yOffset );
//	~CCYC();

	// default assignment operator will work
//	operator= (const CCYC& other);
	void Validate() const;
	int NumEntries() const		{ return _nEntries; }
//	_CCYC* GetCCYC( const char* szFilename, int idxMaterial = 0 ) const;
	_CCYC* GetCCYC( int idx ) const;

#if DO_IOSTREAMS
	friend std::ostream& operator << ( std::ostream& s, CCYC ccyc );
#endif

protected:
	_CCYC* _tblCCYC;
	int _nEntries;
};

//=============================================================================
#endif	// CCYC_HP
//=============================================================================
