//===========================================================================
// gfx/callbacks.hp: Callbacks used the gfx engine
// Copyright ( c ) 2003 World Foundry Group  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

//===========================================================================
// Original Author: Kevin T. Seghetti
//==========================================================================

#ifndef _GFXCALLBACKS_HP
#define _GFXCALLBACKS_HP

#include <pigsys/pigsys.hp>
                          
//==============================================================================
// kts kludge, game must implement this call to allow gfx system to find textures,
// need to design a better way

class PixelMap;
class Texture;

struct LookupTextureStruct
{
    LookupTextureStruct(const Texture& initTexture, const PixelMap& initPixelMap) : 
       texture(initTexture),texturePixelMap(initPixelMap)
    {};

    const Texture& texture;
    const PixelMap& texturePixelMap;
};
                          
//==============================================================================
                     
class GfxCallbacks
{
public:
   virtual ~GfxCallbacks();

   virtual LookupTextureStruct LookupTexture(const char* name, int32 userData) const = 0;                 // in streaming, this should be an asset ID

   void  Validate() const;
protected:
   virtual void _Validate() const = 0;
};

//==============================================================================
#endif
//==============================================================================

