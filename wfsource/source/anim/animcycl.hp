//============================================================================
// AnimCycl.hp:
// Copyright (c) 1997,1999,2000,2003 World Foundry Group.  
// Part of the World Foundry 3D video game engine/production environment
// for more information about World Foundry, see www.worldfoundry.org
//==============================================================================
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// Version 2 as published by the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
// or see www.fsf.org

//============================================================================
// Original Author: Kevin T. Seghetti
//=============================================================================

#ifndef _AnimationCycles_H
#define _AnimationCycles_H

//============================================================================
// Includes
//============================================================================

#include <pigsys/pigsys.hp>
#include <gfx/rendobj3.hp>
#include <anim/anim.hp>
#include <streams/binstrm.hp>
#include "animmang.hp"

//=============================================================================

class AnimationCycleArray
{
public:
	AnimationCycleArray(Memory& memory, binistream& input, const RenderObject3D& object);
	~AnimationCycleArray();
	inline void Validate() const;

	inline void SetCycle(int cycle);
	inline void Animate(Scalar time, RenderObject3D& object);
private:
	// kts these should be in a seperate class so that they can be re-used (or maybe we should re-use this entire class)
	AnimateRenderObject3D* _cycles[AnimationManager::MAX_ANIMATION_CYCLES];		// array of cycle pointers
	int32 _cycleIndex;
//	int32 _animMap[ANIMATION_COUNT];
};

//============================================================================

#if		USE_INLINE_DEFS || defined( _AnimationCycles_CC )
#include <anim/animcycl.hpi>		// include all inline definitions as appropriate
#endif

//=============================================================================
#endif
//=============================================================================
